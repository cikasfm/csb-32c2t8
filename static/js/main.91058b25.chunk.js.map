{"version":3,"sources":["todo.service.js","Requirements.js","App.js","index.js"],"names":["todoList","count","getList","JSON","parse","localStorage","getItem","stringify","setList","list","setItem","randomDelay","time","max","Math","floor","random","Promise","resolve","reject","setTimeout","module","exports","getTasks","then","setTasks","newList","addTask","task","removeTask","found","findIndex","val","splice","Requirements","state","show","toggle","props","onToggle","setState","this","className","class","type","onClick","id","Component","App","rootElement","document","getElementById","createRoot","render"],"mappings":"8MAAMA,EAAW,CAAC,aAAc,SAAU,cAEtCC,EAAQ,EAUNC,EAAU,kBACdC,KAAKC,MAAMC,aAAaC,QAAQ,aAAeH,KAAKI,UAAUP,GADhD,EAEVQ,EAAU,eAACC,EAAD,uDAAQ,GAAR,OACdJ,aAAaK,QAAQ,WAAYP,KAAKI,UAAUE,GADlC,EAUVE,EAAc,kBApBLC,EAMA,eAACC,EAAD,uDAAO,IAAP,OAAgBC,KAAKC,MAAMD,KAAKE,SAAWH,EAA3C,CAciBG,GAnB9B,IAAIC,SAAQ,SAACC,EAASC,GACpB,KAAMlB,EAAQ,IAAM,EAAG,OAAOkB,EAAO,eAAD,OAAgBlB,IACpDmB,WAAWF,EAASN,EACrB,IAJW,IAACA,CAoBK,EAOpBS,EAAOC,QAAQC,SAAf,gCAA0B,iHAAYZ,IAAca,MAAK,kBAAMtB,GAAN,KAA/B,2CAQ1BmB,EAAOC,QAAQG,SAAf,gCAA0B,iHAAOC,EAAP,+BAAiB,GAAjB,kBACxBf,IACGa,MAAK,kBAAMhB,EAAQ,YAAIkB,GAAlB,IACLF,MAAK,kBAAMtB,GAAN,KAHgB,2CAW1BmB,EAAOC,QAAQK,QAAf,iDAAyB,WAAOC,GAAP,oGACvBjB,IACGa,MAAK,kBAAMhB,EAAQ,GAAD,mBAAKN,KAAL,CAAgB0B,IAA7B,IACLJ,MAAK,kBAAMtB,GAAN,KAHe,2CAAzB,sDAWAmB,EAAOC,QAAQO,WAAf,iDAA4B,WAAOD,GAAP,oGAC1BjB,IACGa,MAAK,WACJ,IAAIf,EAAOP,IACP4B,EAAQrB,EAAKsB,WAAU,SAACC,GAAD,OAASJ,IAASI,CAAlB,IACvBF,GAAS,GACXrB,EAAKwB,OAAOH,EAAO,GAErBtB,EAAQC,EACT,IACAe,MAAK,kBAAMtB,GAAN,KAVkB,2CAA5B,qD,sHCtDqBgC,E,4MACnBC,MAAQ,CACNC,MAAM,G,EAGRC,OAAS,WACP,MAAgC,EAAKC,MAA7BC,gBAAR,MAAmB,WAAQ,EAA3B,EACA,EAAKC,UACH,YACE,MAAO,CACLJ,MAFU,EAAXA,KAIF,IACD,kBAAMG,EAAS,EAAKJ,MAApB,GAEH,E,4CAED,WACE,IAAQC,EAASK,KAAKN,MAAdC,KACR,OACE,qBAAKM,UAAU,YAAf,SACE,qBAAKC,MAAM,mCAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,oBAAIA,MAAM,oBAAV,6BACA,mBAAGA,MAAM,gBAAT,sEAGA,wBACEA,MAAM,yBACNC,KAAK,SACLC,QAASJ,KAAKJ,OAHhB,0BAOCD,EACC,sBAAKU,GAAG,eAAR,UACE,8CACA,6CAFF,0CAIE,+BACE,2CACA,oDAEA,0CACA,wCAEA,2CACA,sCAEA,2CACA,2CAEF,wDAjBF,oBAkBmB,mDAlBnB,0DAqBE,WAKb,K,GA7DuCC,a,YCH3B,SAASC,IACtB,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,KAGL,CCLD,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACL,EAAD,M","file":"static/js/main.91058b25.chunk.js","sourcesContent":["const todoList = [\"first task\", \"task 2\", \"third task\"];\n\nlet count = 0;\n\nconst delay = (time) =>\n  new Promise((resolve, reject) => {\n    if (++count % 5 === 0) return reject(`weird error ${count}`);\n    setTimeout(resolve, time);\n  });\n\nconst random = (max = 1000) => Math.floor(Math.random() * max);\n\nconst getList = () =>\n  JSON.parse(localStorage.getItem(\"todoList\") || JSON.stringify(todoList));\nconst setList = (list = []) =>\n  localStorage.setItem(\"todoList\", JSON.stringify(list));\n\n/**\n * Creates a random delay ( up to 1000ms ) and returns a promise.\n *\n * Will \"reject\" a promise every 5th call\n *\n * @returns {Promise<unknown>}\n */\nconst randomDelay = () => delay(random());\n\n/**\n * Returns a list of tasks ( as a Promise )\n *\n * @returns {Promise} todoList array wrapped in a Promise\n */\nmodule.exports.getTasks = async () => randomDelay().then(() => getList());\n\n/**\n * <p>Sets a list of tasks to the Local Storage</p>\n *\n * @param {Array} newList a list of tasks\n * @returns {Promise} todoList array wrapped in a Promise\n */\nmodule.exports.setTasks = async (newList = []) =>\n  randomDelay()\n    .then(() => setList([...newList]))\n    .then(() => getList());\n\n/**\n * <p>Adds a new task to add to the list and updates the list in Local Storage</p>\n *\n * @param {string} task a new task to add to the list\n * @returns {Promise} todoList array wrapped in a Promise\n */\nmodule.exports.addTask = async (task) =>\n  randomDelay()\n    .then(() => setList([...getList(), task]))\n    .then(() => getList());\n\n/**\n * <p>Removes the first matching task from the list and updates the list in Local Storage</p>\n *\n * @param {string} task a task to remove\n * @returns {Promise} todoList array wrapped in a Promise\n */\nmodule.exports.removeTask = async (task) =>\n  randomDelay()\n    .then(() => {\n      let list = getList();\n      let found = list.findIndex((val) => task === val);\n      if (found > -1) {\n        list.splice(found, 1);\n      }\n      setList(list);\n    })\n    .then(() => getList());\n","import React, { Component } from \"react\";\n/**\n * props:\n *    onToggle(state object) func - A callback after the component is toggled.\n *    label string - The label for the Dropdown\n *    children object - The content that needs to be shown or hidden\n */\nexport default class Requirements extends Component {\n  state = {\n    show: false\n  };\n\n  toggle = () => {\n    const { onToggle = () => {} } = this.props;\n    this.setState(\n      ({ show }) => {\n        return {\n          show: !show\n        };\n      },\n      () => onToggle(this.state)\n    );\n  };\n\n  render() {\n    const { show } = this.state;\n    return (\n      <div className=\"container\">\n        <div class=\"p-5 mb-4 mt-4 bg-light rounded-3\">\n          <div class=\"container-fluid\">\n            <h1 class=\"display-5 fw-bold\">Coding exercise</h1>\n            <p class=\"col-md-8 fs-4\">\n              The goal of this task is to implement a Simple Todo List\n            </p>\n            <button\n              class=\"btn btn-primary btn-lg\"\n              type=\"button\"\n              onClick={this.toggle}\n            >\n              Requirements\n            </button>\n            {show ? (\n              <div id=\"requirements\">\n                <h2>Requirements</h2>\n                <h3>UI Controls</h3>\n                Here's a list of UI controls to be used\n                <dl>\n                  <dt>Task name</dt>\n                  <dd>Input field (text)</dd>\n\n                  <dt>Add task</dt>\n                  <dd>Button</dd>\n\n                  <dt>Task list</dt>\n                  <dd>List</dd>\n\n                  <dt>Task item</dt>\n                  <dd>Delete</dd>\n                </dl>\n                <h3>Implementation details</h3>\n                Use the provided <code>todo.service.js</code> as a backend\n                service for load/add/remove operations\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Requirements from \"./Requirements\";\nimport \"./styles.css\";\nimport { getTasks, addTask, removeTask, setTasks } from \"./todo.service\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Requirements />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}